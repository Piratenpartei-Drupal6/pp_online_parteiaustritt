<?php


/**
 * Definition of constants
 */
define("pp_online_parteiaustritt_DELETE_INTERVAL", 7);
define("pp_online_parteiaustritt_CRON_INTERVAL", 60);


/*function pp_online_parteiaustritt_requirements($phase) {
  return pp_online_mitgliedsantrag_requirements($phase);
}*/


function pp_online_parteiaustritt_init_gpg(&$requirements = array()) {
  return pp_online_mitgliedsantrag_init_gpg($requirements = array());
}


function pp_online_parteiaustritt_get_gpg($debug = false) {
  return pp_online_mitgliedsantrag_get_gpg($debug = false);
}


function pp_online_parteiaustritt_get_key_id($id) {
  return pp_online_mitgliedsantrag_get_key_id($id);
}


function pp_online_parteiaustritt_get_gpg_keys($gpg) {
  return pp_online_mitgliedsantrag_get_gpg_keys($gpg);
}

/**
 * Implementation of hook_meu()
 */
function pp_online_parteiaustritt_menu() {
  $items = array();

  /*$items['admin/settings/piraten/membership'] = array(
    'title' => 'Online-Mitgliedsantrag',
    'description' => 'Einstellungen',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pp_online_parteiaustritt_admin_settings_form'),
    'access arguments' => array('administer pp_online_parteiaustritt'),
    'file' => 'pp_online_parteiaustritt_settings.admin.inc'
  );

  $items['admin/settings/piraten/membership/settings'] = array(
    'title' => 'Einstellungen',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/settings/piraten/membership/pgp'] = array(
    'title' => 'PGP',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pp_online_parteiaustritt_admin_pgp_form'),
    'access arguments' => array('administer pp_online_parteiaustritt'),
    'file' => 'pp_online_parteiaustritt_pgp.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );*/

  return $items;
}


/**
* Display help and module information.
* @param path
*   Which path of the site we're displaying help.
* @param arg
*   Array that holds the current path as would be returned from arg() function.
* @return
*   help text for the path.
*/
function pp_online_parteiaustritt_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#pp_online_parteiaustritt":
      $output = '<p>'. t("Zeigt den Block für den Online-Parteiaustritt").'</p>';
      break;
  }
  return $output;
} // function pp_online_parteiaustritt_help


/**
 * Implementation of hook_init().
 *
 * These includes do not need to be loaded for cached pages.
 */
function pp_online_parteiaustritt_init() {
  // Add necessary CSS and JS.
  // TODO: These shouldn't be loaded on every page, but block caching omits
  // CSS and JS files that would be otherwise added.
  drupal_add_css(drupal_get_path('module', 'pp_online_parteiaustritt') .'/pp_online_parteiaustritt.css');
  drupal_add_js(drupal_get_path('module', 'pp_online_parteiaustritt') .'/pp_online_parteiaustritt.js');

  // prevent caching
  #$GLOBALS['conf']['cache'] = FALSE;
}


/**
* Valid permissions for this module
* @return array An array of valid permissions for the pp_online_parteiaustritt module
*/

function pp_online_parteiaustritt_perm() {
  return array('administer pp_online_parteiaustritt');
} // function pp_online_parteiaustritt_perm()


/**
* Generate HTML for the pp_online_parteiaustritt block
* @param op the operation from the URL
* @param delta offset
* @returns block HTML
*/
function pp_online_parteiaustritt_block($op = 'list', $delta = '', $edit = array()) {
	// listing of blocks, such as on the admin/block page
		#echo $op."\n";
		#print_r($_GET);
		switch ($op) {
			case "list":
				$block[0]["info"] = "Piraten - ".t('Online-Parteiaustritt');
				$block[0]['cache'] = BLOCK_NO_CACHE;
				/* set cache -1 in blocks table https://drupal.org/node/791142 */
				return $block;

			case "view":
				// SSL check
					$ssl = variable_get('pp_online_mitgliedsantrag_force_ssl', NULL);
					#echo $ssl;

					if ($ssl == 1) {
						global $base_url;

						if (!securepages_is_secure())
							securepages_goto(TRUE);

						if (securepages_is_secure())
							$base_url = securepages_baseurl();
					}

				// set up the block
					$block['subject'] = t('Online-Parteiaustritt');
					$block['content'] = drupal_get_form('pp_online_parteiaustritt_form');
					return $block;
		}
}


function pp_online_parteiaustritt_form_validate($form, &$form_state) {
	// debug
		#echo "VALIDATE";
		watchdog('pp_online_parteiaustritt', t("pp_online_parteiaustritt_form_validate"));
		watchdog('pp_online_parteiaustritt', t("page")." ".$form_state['storage']['page']);

	// check page
		if ($form_state['storage']['page'] == 1) {
			// email
				$email_1 = $form_state['values']['pp_online_parteiaustritt_email_1'];
				$email_2 = $form_state['values']['pp_online_parteiaustritt_email_2'];
				if (!valid_email_address($email_1))
					form_set_error('pp_online_parteiaustritt_email_1', t('Das Feld E-Mail-Adresse muss eine korrekte Adresse enthalten.'));
				else if (!valid_email_address($email_2))
					form_set_error('pp_online_parteiaustritt_email_2', t('Das Feld E-Mail-Adresse Wiederholung muss eine korrekte Adresse enthalten.'));
				else if ($email_1 != $email_2)
					form_set_error('pp_online_parteiaustritt_email_1', t('Die E-Mail-Adressen müssen gleich sein.'));

			// mitgliedsnummer
				$mgnr = $form_state['values']['pp_online_parteiaustritt_mitgliedsnummer'];
				if (!empty($mgnr)) {
					if (!ctype_digit($mgnr))
						form_set_error('pp_online_parteiaustritt_mitgliedsnummer', t('Das Feld Mitgliedsnummer muss eine natürliche Zahl enthalten.'));
					else {
						if (strlen($mgnr) < 3 || strlen($mgnr) > 5)
							form_set_error('pp_online_parteiaustritt_mitgliedsnummer', t('Das Feld Mitgliedsnummer darf nur 3 bis 5-stellig sein.'));
					}
				}

			// satzung
				if ($form_state['values']["pp_online_parteiaustritt_satzung"] != 1) {
					form_set_error('pp_online_parteiaustritt_satzung', t('Die Satzung der Piratenpartei Hessen muss anerkannt werden.'));
				}


		} else {
			// code
				$code = $form_state['values']['pp_online_parteiaustritt_code'];
				$code = trim($code);
				if (!ctype_digit($code))
					form_set_error('pp_online_parteiaustritt_code', t('Das Feld Bestatigungs-Code muss eine natürliche Zahl enthalten.'));

				if ($form_state['storage']['code_get']) {
					// check db
						$sql = "SELECT COUNT(*) AS `count` FROM {pp_online_parteiaustritt} WHERE `code` = %d";
						$results = db_query($sql, $code);
						$data = db_fetch_array($results);
						#print_r($data);
						if ($data["count"] != 1)
							form_set_error('pp_online_parteiaustritt_code', t('Der Bestatigungs-Code ist falsch.'));
				} else if ($code != $form_state['storage']['code']) {
					// check storage
						form_set_error('pp_online_parteiaustritt_code', t('Der Bestatigungs-Code ist falsch.'));
				}
		}
}


function pp_online_parteiaustritt_form_submit($form, &$form_state) {
	// debug
		watchdog('pp_online_parteiaustritt', t("pp_online_parteiaustritt_form_submit"));
		watchdog('pp_online_parteiaustritt', t("page")." ".$form_state['storage']['page']);

	// check page
		if ($form_state['storage']['page'] == 1) {

			// generate code
				$code = date("md").rand(1000, 9999);

			// load vorstand email
				$email = file_get_contents(drupal_get_path('module', 'pp_online_parteiaustritt').'/email/vorstand.txt');

			// load confirmation email
				$confirmation = file_get_contents(drupal_get_path('module', 'pp_online_parteiaustritt').'/email/bestaetigen.txt');

			// debug
				watchdog('pp_online_parteiaustritt', t("templates loaded"));

			// replacements form fields
				foreach($form_state['values'] as $key => $value) {
					if (strpos($key, "pp_online_parteiaustritt_") !== false) {
						$rkey = str_replace("pp_online_parteiaustritt_", "", $key);

						switch ($rkey) {

							case "email_1":
								$rkey = "email";
								$rvalue = $value;
								break;

							default:
								$rvalue = $value;
								break;
						}

						$email = str_replace("%%".$rkey."%%", $rvalue, $email);
						$confirmation = str_replace("%%".$rkey."%%", $rvalue, $confirmation);
					}
				}

			// debug
				watchdog('pp_online_parteiaustritt', t("replacements ready"));

			// replacements additonal info
				$email = str_replace("%%code%%", $code, $email);
				$confirmation = str_replace("%%code%%", $code, $confirmation);

				$email = str_replace("%%datum%%", date("d.m.Y"), $email);
				$confirmation = str_replace("%%datum%%", date("d.m.Y"), $confirmation);

				$endofyear = strtotime(date("Y")."-12-31");
				$email = str_replace("%%jahresende%%", date("d.m.Y", $endofyear), $email);
				$confirmation = str_replace("%%jahresende%%", date("d.m.Y", $endofyear), $confirmation);

			// replacements of link and duration
				$path = isset($_GET['q']) ? $_GET['q'] : '<front>';
				$link = url($path, array('absolute' => TRUE));
				$link .= "?code=".$code;
				$confirmation = str_replace("%%link%%", $link, $confirmation);

				$tage = variable_get('pp_online_parteiaustritt_delete', pp_online_parteiaustritt_DELETE_INTERVAL);
				$confirmation = str_replace("%%tage%%", $tage, $confirmation);

			// set empty fields
				$empty = "";

				preg_match_all("/\%\%([a-z0-9]+)\%\%/", $email, $regs);
				#print_r($regs);
				foreach($regs[1] as $reg) {
					$email = str_replace("%%".$reg."%%", $empty, $email);
				}
				#print_r($email);

				preg_match_all("/\%\%([a-z0-9]+)\%\%/", $confirmation, $regs);
				#print_r($regs);
				foreach($regs[1] as $reg) {
					$confirmation = str_replace("%%".$reg."%%", $empty, $confirmation);
				}
				#print_r($confirmation);

			// trim
				$email = trim($email);
				$confirmation = trim($confirmation);

			// debug
				watchdog('pp_online_parteiaustritt', t("init gpg"));

			// gpg
				if (!pp_online_parteiaustritt_init_gpg())
					return;
				$gpg = pp_online_parteiaustritt_get_gpg();

			// debug
				watchdog('pp_online_parteiaustritt', t("get gpg vars"));

			// keys
				$ekey = variable_get('pp_online_mitgliedsantrag_receiver', NULL);	// stored in pp_online_mitgliedsantrag
				#echo $ekey."\n";

				$skey = variable_get('pp_online_mitgliedsantrag_sender', NULL);		// stored in pp_online_mitgliedsantrag
				$pass = variable_get('pp_online_mitgliedsantrag_password', NULL);	// stored in pp_online_mitgliedsantrag
				#echo $skey."\n";
				#echo $pass."\n";
				#die();

			// debug
				watchdog('pp_online_parteiaustritt', t("prepare gpg receiver and sender"));

			// get receiver and sender
				$receiver = $gpg->getKeys($ekey);
				$receiver = $receiver[0]->getUserIds();
				#print_r($receiver);
				$to = $receiver[0]->getEmail();

				$sender = $gpg->getKeys($skey);
				$sender = $sender[0]->getUserIds();
				#print_r($sender);
				$from_name = $sender[0]->getName();
				$from = $sender[0]->getEmail();

			// debug
				watchdog('pp_online_parteiaustritt', t("prepare gpg mail"));

			// generate boundy
				$uniq_id = md5(uniqid(time()));
				$boundary = 'opa_'.$uniq_id;

			// load email skel
				$body = file_get_contents(drupal_get_path('module', 'pp_online_parteiaustritt').'/email/prepare_mime_body.txt');

			// prepare email skel
				$body = str_replace("%%boundary%%", $boundary, $body);
				$body = str_replace("%%email%%", $email, $body);
				$body = str_replace("%%filename%%", "import_".$code.".csv", $body);

			// create email
				$email = $body;
				#echo "<pre>";
				#print_r($email);
				#die("exit");

			// debug
				watchdog('pp_online_parteiaustritt', t("encrypt and sign"));

			// encrypt and sign
/*
				echo "---------------------------------------------------------------------------------------------------------<br>\n";
				echo $ekey."<br>\n";
				echo $kv_key."<br>\n";
				echo $pass."<br>\n";
				echo "---------------------------------------------------------------------------------------------------------<br>\n";
				#die("stop");
*/
				watchdog('pp_online_parteiaustritt', $ekey);
				if (!pp_online_parteiaustritt_check_gpg($gpg, $ekey)) {
					form_set_error('pp_online_parteiaustritt_info', t('Der PGP-Key %key ist abgelaufen oder ungültig. Bitte bei der <a href="mailto:mitgliederverwaltung@piratenpartei-hessen.de">Mitgliederverwaltung</a> melden.', array("%key" => $ekey)));
					return;
				}
				watchdog('pp_online_parteiaustritt', t("checked"));
				$gpg->addEncryptKey($ekey);

				watchdog('pp_online_parteiaustritt', $skey);
				if (!pp_online_parteiaustritt_check_gpg($gpg, $skey)) {
					form_set_error('pp_online_parteiaustritt_info', t('Der PGP-Key %key ist abgelaufen oder ungültig. Bitte bei der <a href="mailto:mitgliederverwaltung@piratenpartei-hessen.de">Mitgliederverwaltung</a> melden.', array("%key" => $skey)));
					return;
				}
				watchdog('pp_online_parteiaustritt', t("checked"));
				$gpg->addSignKey($skey, $pass);

				$email = $gpg->encryptAndSign($email);
				#print_r($email);
				#die("exit");

			// debug
				watchdog('pp_online_parteiaustritt', t("kv check"));

			// kv check
				$org = "Landesverband";
				$to2 = "";

			// debug
				watchdog('pp_online_parteiaustritt', t("write to db"));

			// store to db
				$obj = new stdClass();
				$obj->date = date("Y-m-d H:i:s");
				$obj->code = $code;
				$obj->receiver = $to;
				$obj->receiver2 = $to2;
				$obj->email = $email;
				$obj->org = $org;
				drupal_write_record('pp_online_parteiaustritt', $obj);

			// debug
				watchdog('pp_online_parteiaustritt', t("sending mail"));

			// send email
				module_load_include('inc', 'phpmailer', 'includes/phpmailer.class');
				$mail = new DrupalPHPMailer();
				$mail->IsMail();

				try {
					$mail->FromName = $from_name;
					$mail->From = $from;
					$mail->AddAddress($form_state['values']['pp_online_parteiaustritt_email_1'], $form_state['values']['pp_online_parteiaustritt_vorname']." ".$form_state['values']['pp_online_parteiaustritt_nachname']);
					$mail->Subject = t("Online-Parteiaustritt")." #".$code;
					$mail->Body = $confirmation;
					$result = $mail->Send();
		 		} catch (phpmailerException $e) {
					drupal_set_message(t('Das Versenden der E-Mail ist fehlgeschlagen:<br />@error', array('@error' => $e->getMessage())), 'error');
					#form_set_error('form', t('Das Versenden der E-Mail ist fehlgeschlagen:<br />@error', array('@error' => $e->getMessage())), 'error');
					#$form_state['redirect'] = FALSE;
					watchdog('phpmailer', $e->getMessage(), NULL, WATCHDOG_ERROR);
					return;
				}

			// switch to second page
				#$form_state['rebuild'] = TRUE;
				$form_state['storage']['page']++;
				$form_state['storage']['code'] = $code;

			// debug
				watchdog('pp_online_parteiaustritt', t("next page"));

		} else {
			// load database record
				$code = $form_state['values']['pp_online_parteiaustritt_code'];
				$sql = "SELECT * FROM {pp_online_parteiaustritt} WHERE `code` = %d";
				$results = db_query($sql, $code);
				$data = db_fetch_array($results);
				#print_r($data);

			// gpg
				if (!pp_online_parteiaustritt_init_gpg())
					return;
				$gpg = pp_online_parteiaustritt_get_gpg();

			// keys
				$skey = variable_get('pp_online_mitgliedsantrag_sender', NULL);		// stored in pp_online_mitgliedsantrag
				$pass = variable_get('pp_online_mitgliedsantrag_password', NULL);	// stored in pp_online_mitgliedsantrag

			// get receiver and sender
				$sender = $gpg->getKeys($skey);
				$sender = $sender[0]->getUserIds();
				#print_r($sender);
				$from_name = $sender[0]->getName();
				$from = $sender[0]->getEmail();

			// generate boundy
				$uniq_id = md5(uniqid(time()));
				$boundary = 'oma_'.$uniq_id;

			// load email skel
				$header = file_get_contents(drupal_get_path('module', 'pp_online_parteiaustritt').'/email/pgp_mime_header.txt');
				$body = file_get_contents(drupal_get_path('module', 'pp_online_parteiaustritt').'/email/pgp_mime_body.txt');

			// prepare email skel
				$header = str_replace("%%boundary%%", $boundary, $header);
				$body = str_replace("%%body%%", $data["email"], $body);
				$body = str_replace("%%boundary%%", $boundary, $body);

			// send email
				module_load_include('inc', 'phpmailer', 'includes/phpmailer.class');
				$mail = new DrupalPHPMailer();
				$mail->IsMail();

				try {
					$mail->FromName = $from_name;
					$mail->From = $from;
					if (!empty($data["receiver2"])) {
						$mail->AddAddress($data["receiver2"]);
						$mail->AddCC($data["receiver"]);
					} else {
						$mail->AddAddress($data["receiver"]);
					}
					$mail->Subject = t("Online-Parteiaustritt")." #".$code." (".$data["org"].")";
					$mail->Body = $body;
					$mail->AddCustomHeader($header);
					#$mail->AddStringAttachment($data["csv"], "import_".$code.".csv.asc", "binary", "application/pgp-encrypted");
					$result = $mail->Send();
		 		} catch (phpmailerException $e) {
					drupal_set_message(t('Das Versenden der E-Mail ist fehlgeschlagen:<br />@error', array('@error' => $e->getMessage())), 'error');
					#form_set_error('form', t('Das Versenden der E-Mail ist fehlgeschlagen:<br />@error', array('@error' => $e->getMessage())), 'error');
					#$form_state['redirect'] = FALSE;
					watchdog('phpmailer', $e->getMessage(), NULL, WATCHDOG_ERROR);
					return;
				}

			// delete record
				$sql = "DELETE FROM {pp_online_parteiaustritt} WHERE `id` = %d";
				$results = db_query($sql, $data["id"]);

			// switch to third page
				#$form_state['rebuild'] = TRUE;
				$form_state['storage']['page']++;
		}

	// return
		return;
}


function pp_online_parteiaustritt_check_gpg($gpg, $key) {
  return pp_online_mitgliedsantrag_check_gpg($gpg, $key);
}


function pp_online_parteiaustritt_get_gpg_info($gpg, $key) {
  return pp_online_mitgliedsantrag_get_gpg_info($gpg, $key);
}


function pp_online_parteiaustritt_form(&$form_state) {
	// form
		$form = array();

	// check get for code
		#print_r($_GET);
		$code_get = "";
		$form_state['storage']['code_get'] = false;
		if (isset($_GET["code"])) {
			$_GET["code"] = trim($_GET["code"]);
			if (!empty($_GET["code"])) {
				$code_get = $_GET["code"];
				$form_state['storage']['code_get'] = true;
			}
		}

	// define page
		$page = 1;
		if (isset($form_state['storage']['page'])) {
			$page = $form_state['storage']['page'];
		} else if (!empty($code_get)) {
			$page = 2;
			$form_state['storage']['page'] = $page;
		} else {
			$form_state['storage']['page'] = $page;
		}
		#echo $page."\n";
		#echo $form_state['storage']['page']."\n";

	// diffrent pages
		switch($page) {
			case 1:
				/*
				echo "<pre>";
				print_r($form_state);
				echo "</pre>";
				*/

				$form['intro'] = array (
					'#type' => 'item',
					'#value' => t('Noch schneller geht es natürlich online. Fülle einfach das unten stehende Formular aus und erhalte in wenigen Tagen Nachricht mit Deiner Austrittsbestätigung!'),
				);

				$form['personal_data'] = array(
					'#type' => 'fieldset',
					'#title' => t('Persönliche Daten'),
					'#description' => t('Bitte teile uns Deine Mitgliedsdaten mit.<br>Solltest Du nicht Mitglied in Hessen sein, so musst Du Dich an den entsprechenden <a href=@link>Landesverband</a> wenden.', array('@link' => '/landesverband/andere/')),
				);

				$form['personal_data']['pp_online_parteiaustritt_vorname'] = array(
					'#type' => 'textfield',
					'#title' => t('Vorname'),
					'#required' => true,
					'#attributes' => array(
						'class' => 'pp_online_parteiaustritt_width_100',
					),
				);

				$form['personal_data']['pp_online_parteiaustritt_nachname'] = array(
					'#type' => 'textfield',
					'#title' => t('Nachname'),
					'#required' => true,
					'#attributes' => array(
						'class' => 'pp_online_parteiaustritt_width_100',
					),
				);

				$form['personal_data']['pp_online_parteiaustritt_mitgliedsnummer'] = array(
					'#type' => 'textfield',
					'#title' => t('Mitgliedsnummer'),
					'#required' => true,
					'#attributes' => array(
						'class' => 'pp_online_parteiaustritt_width_100',
					),
				);

				$form['personal_data']['pp_online_parteiaustritt_email_1'] = array(
					'#type' => 'textfield',
					'#title' => t('E-Mail-Adresse'),
					'#required' => true,
					'#attributes' => array(
						'class' => 'pp_online_parteiaustritt_width_100',
					),
				);

				$form['personal_data']['pp_online_parteiaustritt_email_2'] = array(
					'#type' => 'textfield',
					'#title' => t('E-Mail-Adresse Wiederholung'),
					'#required' => true,
					'#attributes' => array(
						'class' => 'pp_online_parteiaustritt_width_100',
					),
				);


				$form['optional_data'] = array(
					'#type' => 'fieldset',
					'#title' => t('Optionale Angaben'),
					'#description' => t('Falls Du uns noch etwas mitteilen möchtest.'),
				);

				$form['optional_data']['pp_online_parteiaustritt_beweggruende'] = array(
					'#type' => 'textarea',
					'#title' => t('Beweggründe'),
					'#required' => false,
					'#attributes' => array(
						'class' => 'pp_online_parteiaustritt_width_100',
					),
				);


				$form['generel_data'] = array(
					'#type' => 'fieldset',
					'#title' => t('Generelles'),
				);

				$form['generel_data']['pp_online_parteiaustritt_satzung'] = array(
					'#type' => 'checkbox',
					'#title' => t('Die Regelungen zum Austritt in der <a href="http://wiki.piratenpartei.de/Satzung#.C2.A7_4_-_Rechte_und_Pflichten_der_Piraten">Satzung</a> der Piratenpartei Deutschland erkenne ich an. Der Antrag gilt auch für alle bestehenden Gliederungen der Piratenpartei Deutschland an meinem Wohnsitz. Die Partei darf über meine E-Mail-Adresse mit mir Kontakt aufnehmen. Ich erteile mit diesem Antrag die notwendige schriftliche Einwilligung, dass die in diesem Formular gemachten Angaben an die Piratenpartei Hessen übermittelt und ausschließlich für interne Zwecke der Partei verarbeitet werden dürfen.'),
				);

				$form['generel_data']['pp_online_parteiaustritt_datenschutz'] = array(
					'#type' => 'item',
					'#title' => t('Datenschutzerklärung'),
					'#value' => t('Die Piratenpartei Deutschland verarbeitet die in diesem Austrittsantrag enthaltenen Angaben zur Person für ausschließlich interne Zwecke der Partei. Nach <a href="http://dejure.org/gesetze/BDSG/4.html">§ 4 Bundesdatenschutzgesetz</a> bedarf dies einer vorherigen schriftlichen Einwilligung. Es wird zugesichert, dass die Daten unter strikter Beachtung der Bestimmungen des Bundesdatenschutzgesetzes verarbeitet werden.<br>Bitte beachte, dass die Mitgliedsdaten 10 Jahre lang von der Partei aufbewahrt werden müssen.'),
				);

				$form['generel_data']['captcha'] = array(
					'#type' => 'captcha',
					'#captcha_type' => 'captcha/Math',
				);


				$form['generel_data']['submit'] = array(
					'#type' => 'submit',
					'#value' => t('Mitgliedschaft beenden'),
				);

				break;

			case 2:
				$form['confirm_data'] = array(
					'#type' => 'fieldset',
					'#title' => t('Bestätigen'),
					'#description' => t('Es wird Dir ein Code per E-Mail zu gesendet. Diesen musst Du hier eingeben.<br>Nach dem Bestätigen werden Deine Daten verschlüsselt an den zuständigen Vorstand zur Bearbeitung weitergeleitet.'),
				);

				$form['confirm_data']['pp_online_parteiaustritt_code'] = array(
					'#type' => 'textfield',
					'#title' => t('Bestätigungs-Code'),
					'#required' => true,
					'#default_value' => $code_get,
				);

				$form['confirm_data']['submit'] = array(
					'#type' => 'submit',
					'#value' => t('Bestätigen'),
				);

				break;

			case 3:
				$form['thankyou'] = array(
					'#type' => 'fieldset',
					'#title' => t('Vielen Dank'),
					'#description' => t('Du erhälst alsbald Nachricht vom zuständigen Vorstand oder der zuständigen Mitgliederverwaltung, um Deinen Austritt zu bestätigen.'),
				);
		}

	// return
		return $form;
}


/**
*
*/
function pp_online_parteiaustritt_cron() {
	// check cron interval
		$last_run = variable_get('pp_online_parteiaustritt_cron_last_run', NULL);

		if (empty($last_run)) {
			_pp_online_parteiaustritt_cron();
		} else if (time() > $last_run + pp_online_parteiaustritt_CRON_INTERVAL) {
			_pp_online_parteiaustritt_cron();
		}
}

function _pp_online_parteiaustritt_cron() {
	// interval
		$days = variable_get('pp_online_parteiaustritt_delete', pp_online_parteiaustritt_DELETE_INTERVAL);
		$interval = date("Y-m-d H:i:s", strtotime("-".$days." days"));

	// delete
		$sql = "SELECT COUNT(*) AS `count` FROM {pp_online_parteiaustritt} WHERE `date` < '%s'";
		$results = db_query($sql, $interval);
		$stats = db_fetch_array($results);

		$sql = "DELETE FROM {pp_online_parteiaustritt} WHERE `date` < '%s'";
		$results = db_query($sql, $interval);
		watchdog('pp_online_parteiaustritt', t("Cron run: ".$stats["count"]." deleted"));

	// update cron interval
		variable_set('pp_online_parteiaustritt_cron_last_run', time());
}

?>
